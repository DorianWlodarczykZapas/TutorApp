# Generated by Django 5.2.6 on 2025-10-20 20:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "author",
                    models.CharField(blank=True, max_length=255, verbose_name="Author"),
                ),
                (
                    "publication_year",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Publication Year"
                    ),
                ),
                (
                    "school_level",
                    models.CharField(
                        choices=[(1, "Primary School"), (2, "Secondary School")],
                        max_length=20,
                        verbose_name="School Level",
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        choices=[(1, "Mathematics"), (2, "Physics")],
                        default=1,
                        max_length=10,
                        verbose_name="Subject",
                    ),
                ),
                (
                    "grade",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (7, "7th Grade - Primary"),
                            (8, "8th Grade - Primary"),
                            (9, "1st Year - Secondary"),
                            (10, "2nd Year - Secondary"),
                            (11, "3rd Year - Secondary"),
                            (12, "4th Year - Secondary"),
                        ],
                        help_text="Leave empty for books covering multiple grades",
                        null=True,
                        verbose_name="Target Grade",
                    ),
                ),
            ],
            options={
                "verbose_name": "Book",
                "verbose_name_plural": "Books",
                "ordering": ["school_level", "grade", "subject", "title"],
            },
        ),
        migrations.CreateModel(
            name="ExamTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_id", models.IntegerField()),
                (
                    "task_screen",
                    models.FileField(
                        default="exam_tasks/default_task.pdf", upload_to=""
                    ),
                ),
                (
                    "task_content",
                    models.TextField(
                        blank=True,
                        help_text="The extracted content of the task from the PDF file.",
                    ),
                ),
                (
                    "task_pages",
                    models.CharField(
                        blank=True,
                        help_text="Page number(s) in the PDF, e.g., '5' or '5-6'.",
                        max_length=20,
                        verbose_name="Task Pages",
                    ),
                ),
                (
                    "answer_pages",
                    models.CharField(
                        blank=True,
                        help_text="Page number(s) in the PDF with the solution.",
                        max_length=20,
                        verbose_name="Answer Pages",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exam Task",
                "verbose_name_plural": "Exam Tasks",
                "ordering": ["exam", "task_id"],
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., 'Linear Equations', 'Thermodynamics', 'Kinematics'",
                        max_length=255,
                        verbose_name="Section Name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Section",
                "verbose_name_plural": "Sections",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Specific topic",
                        max_length=255,
                        verbose_name="Topic name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Topic",
                "verbose_name_plural": "Topics",
                "ordering": ["section", "name"],
            },
        ),
        migrations.CreateModel(
            name="TrainingTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_content", models.TextField(verbose_name="Task Content")),
                ("answer", models.CharField(max_length=255, verbose_name="Answer")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="tasks_images/",
                        verbose_name="Task Image (optional)",
                    ),
                ),
                (
                    "level",
                    models.IntegerField(
                        choices=[(1, "Easy"), (2, "Intermediate"), (3, "Advanced")],
                        default=2,
                        verbose_name="Difficulty Level",
                    ),
                ),
            ],
            options={
                "verbose_name": "Training Task",
                "verbose_name_plural": "Training Tasks",
            },
        ),
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exam_type",
                    models.IntegerField(
                        choices=[(1, "Matriculation Exam"), (2, "Eighth Grade Exam")],
                        default=1,
                        verbose_name="Exam type",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        choices=[
                            (2002, "2002"),
                            (2003, "2003"),
                            (2004, "2004"),
                            (2005, "2005"),
                            (2006, "2006"),
                            (2007, "2007"),
                            (2008, "2008"),
                            (2009, "2009"),
                            (2010, "2010"),
                            (2011, "2011"),
                            (2012, "2012"),
                            (2013, "2013"),
                            (2014, "2014"),
                            (2015, "2015"),
                            (2016, "2016"),
                            (2017, "2017"),
                            (2018, "2018"),
                            (2019, "2019"),
                            (2020, "2020"),
                            (2021, "2021"),
                            (2022, "2022"),
                            (2023, "2023"),
                            (2024, "2024"),
                            (2025, "2025"),
                        ]
                    ),
                ),
                (
                    "month",
                    models.IntegerField(
                        choices=[
                            (1, "January"),
                            (2, "February"),
                            (3, "March"),
                            (4, "April"),
                            (5, "May"),
                            (6, "June"),
                            (7, "July"),
                            (8, "August"),
                            (9, "September"),
                            (10, "October"),
                            (11, "November"),
                            (12, "December"),
                        ]
                    ),
                ),
                ("tasks_link", models.FileField(upload_to="exam_pdfs/")),
                (
                    "solutions_link",
                    models.FileField(
                        blank=True, null=True, upload_to="exam_answers_pdfs/"
                    ),
                ),
                (
                    "tasks_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of tasks in this exam"
                    ),
                ),
                (
                    "level_type",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "Basic"), (2, "Extended")],
                        help_text="Exam level: basic or extended (Matriculation only)",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["-year", "-month", "-exam_type", "-level_type"],
                "unique_together": {("year", "month", "level_type", "exam_type")},
            },
        ),
    ]
