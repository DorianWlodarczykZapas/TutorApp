# Generated by Django 5.2.3 on 2025-08-29 21:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("examination_tasks", "0005_alter_exam_solutions_link_alter_exam_tasks_link"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "author",
                    models.CharField(blank=True, max_length=255, verbose_name="Author"),
                ),
                (
                    "publication_year",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Publication Year"
                    ),
                ),
                (
                    "school_level",
                    models.CharField(
                        choices=[
                            ("primary", "Primary School"),
                            ("secondary", "Secondary School"),
                        ],
                        default="secondary",
                        max_length=20,
                        verbose_name="School Level",
                    ),
                ),
            ],
            options={
                "verbose_name": "Book",
                "verbose_name_plural": "Books",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.IntegerField(
                        choices=[(1, "Real Numbers"), (2, "Functions")],
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Section",
                "verbose_name_plural": "Sections",
                "ordering": ["name"],
            },
        ),
        migrations.AlterUniqueTogether(
            name="mathmatriculationtasks",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="mathmatriculationtasks",
            name="completed_by",
        ),
        migrations.RemoveField(
            model_name="mathmatriculationtasks",
            name="exam",
        ),
        migrations.RemoveField(
            model_name="mathmatriculationtrainingtasks",
            name="done_by",
        ),
        migrations.AlterModelOptions(
            name="exam",
            options={"ordering": ["-year", "-month", "-exam_type", "-level_type"]},
        ),
        migrations.AlterUniqueTogether(
            name="exam",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="exam",
            name="exam_type",
            field=models.IntegerField(
                choices=[(1, "Matriculation Exam"), (2, "Eighth Grade Exam")],
                default=1,
                verbose_name="Exam type",
            ),
        ),
        migrations.AlterField(
            model_name="exam",
            name="level_type",
            field=models.IntegerField(
                blank=True,
                choices=[(1, "Basic"), (2, "Extended")],
                help_text="Exam level: basic or extended (Matriculation only)",
                null=True,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="exam",
            unique_together={("year", "month", "level_type", "exam_type")},
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Chapter Title"),
                ),
                (
                    "chapter_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Chapter Number"
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chapters",
                        to="examination_tasks.book",
                        verbose_name="Book",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chapter",
                "verbose_name_plural": "Chapters",
                "ordering": ["book", "chapter_number"],
            },
        ),
        migrations.CreateModel(
            name="ExamTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_id", models.IntegerField()),
                (
                    "topic",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "Viete's Formulas"), (2, "Optimization")],
                        null=True,
                        verbose_name="Task Topic",
                    ),
                ),
                (
                    "task_content",
                    models.TextField(
                        blank=True,
                        help_text="The extracted content of the task from the PDF file.",
                    ),
                ),
                (
                    "task_pages",
                    models.CharField(
                        blank=True,
                        help_text="Page number(s) in the PDF, e.g., '5' or '5-6'.",
                        max_length=20,
                        verbose_name="Task Pages",
                    ),
                ),
                (
                    "answer_pages",
                    models.CharField(
                        blank=True,
                        help_text="Page number(s) in the PDF with the solution.",
                        max_length=20,
                        verbose_name="Answer Pages",
                    ),
                ),
                (
                    "completed_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="completed_exam_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="examination_tasks.exam",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="exam_tasks",
                        to="examination_tasks.section",
                        verbose_name="Section",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exam Task",
                "verbose_name_plural": "Exam Tasks",
                "ordering": ["exam", "task_id"],
            },
        ),
        migrations.CreateModel(
            name="TrainingTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_content", models.TextField(verbose_name="Task Content")),
                ("answer", models.CharField(max_length=255, verbose_name="Answer")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="tasks_images/",
                        verbose_name="Task Image (optional)",
                    ),
                ),
                (
                    "level",
                    models.IntegerField(
                        choices=[(1, "Easy"), (2, "Intermediate"), (3, "Advanced")],
                        default=2,
                        verbose_name="Difficulty Level",
                    ),
                ),
                (
                    "chapter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="training_tasks",
                        to="examination_tasks.chapter",
                        verbose_name="Chapter (optional)",
                    ),
                ),
                (
                    "completed_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="completed_training_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sections",
                    models.ManyToManyField(
                        blank=True,
                        related_name="training_tasks",
                        to="examination_tasks.section",
                        verbose_name="Sections",
                    ),
                ),
            ],
            options={
                "verbose_name": "Training Task",
                "verbose_name_plural": "Training Tasks",
            },
        ),
    ]
